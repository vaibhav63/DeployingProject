{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth_guard/address-management-guard.service.ts","./src/app/auth_guard/dashoard-guard.service.ts","./src/app/communication/cart-communication.service.ts","./src/app/communication/growth-report-communication.service.ts","./src/app/communication/order-communication.service.ts","./src/app/communication/product-communication.service.ts","./src/app/communication/sales-report-communication.service.ts","./src/app/components/cart/cart.component.ts","./src/app/components/cart/cart.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/edit-product/edit-product.component.ts","./src/app/components/dashboard/edit-product/edit-product.component.html","./src/app/components/dashboard/growth-report/growth-report.component.ts","./src/app/components/dashboard/growth-report/growth-report.component.html","./src/app/components/dashboard/product-management/product-management.component.ts","./src/app/components/dashboard/product-management/product-management.component.html","./src/app/components/dashboard/product-orders/product-orders.component.ts","./src/app/components/dashboard/product-orders/product-orders.component.html","./src/app/components/dashboard/sales-report/sales-report.component.ts","./src/app/components/dashboard/sales-report/sales-report.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/payment-gateway/payment-gateway.component.ts","./src/app/components/payment-gateway/payment-gateway.component.html","./src/app/components/product/product.component.ts","./src/app/components/product/product.component.html","./src/app/components/user-management/customer-operations/address-creation/address-creation.component.ts","./src/app/components/user-management/customer-operations/address-creation/address-creation.component.html","./src/app/components/user-management/customer-operations/customer-operations.component.ts","./src/app/components/user-management/customer-operations/customer-operations.component.html","./src/app/components/user-management/customer-operations/delete-address/delete-address.component.ts","./src/app/components/user-management/customer-operations/delete-address/delete-address.component.html","./src/app/components/user-management/customer-operations/update-address/update-address.component.ts","./src/app/components/user-management/customer-operations/update-address/update-address.component.html","./src/app/components/user-management/login/login.component.ts","./src/app/components/user-management/login/login.component.html","./src/app/components/user-management/signup/signup.component.ts","./src/app/components/user-management/signup/signup.component.html","./src/app/components/user-management/user-management.component.ts","./src/app/components/user-management/user-management.component.html","./src/app/handle_error/handle-error.service.ts","./src/app/material/material.module.ts","./src/app/model/cart.model.ts","./src/app/model/order.model.ts","./src/app/model/product.model.ts","./src/app/model/sales-report.model.ts","./src/app/pipe/product-filter.pipe.ts","./src/app/service/address.service.ts","./src/app/service/cart.service.ts","./src/app/service/growth-report.service.ts","./src/app/service/notification.service.ts","./src/app/service/order.service.ts","./src/app/service/product.service.ts","./src/app/service/sales-report.service.ts","./src/app/service/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, ExtraOptions } from '@angular/router';\r\nimport { AddressManagementGuardService } from './auth_guard/address-management-guard.service';\r\nimport { DashboardGuardService } from './auth_guard/dashoard-guard.service';\r\nimport { CartComponent } from './components/cart/cart.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { GrowthReportComponent } from './components/dashboard/growth-report/growth-report.component';\r\nimport { ProductManagementComponent } from './components/dashboard/product-management/product-management.component';\r\nimport { ProductOrdersComponent } from './components/dashboard/product-orders/product-orders.component';\r\nimport { SalesReportComponent } from './components/dashboard/sales-report/sales-report.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AddressCreationComponent } from './components/user-management/customer-operations/address-creation/address-creation.component';\r\nimport { CustomerOperationsComponent } from './components/user-management/customer-operations/customer-operations.component';\r\nimport { DeleteAddressComponent } from './components/user-management/customer-operations/delete-address/delete-address.component';\r\nimport { UpdateAddressComponent } from './components/user-management/customer-operations/update-address/update-address.component';\r\nimport { LoginComponent } from './components/user-management/login/login.component';\r\nimport { SignupComponent } from './components/user-management/signup/signup.component';\r\nimport { UserManagementComponent } from './components/user-management/user-management.component';\r\n\r\nconst routerOptions: ExtraOptions = {\r\n\r\n  anchorScrolling: 'enabled',\r\n  scrollOffset: [0, 64],\r\n};\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'mobile', redirectTo: '/home#MOBILE' },\r\n  { path: 'clothes', redirectTo: '/home#CLOTHES' },\r\n  { path: 'sports', redirectTo: '/home#SPORTS' },\r\n  { path: 'grocery', redirectTo: '/home#GROCERY' },\r\n  {\r\n    path: 'dashboard', component: DashboardComponent\r\n    , canActivate: [DashboardGuardService], children: [\r\n      { path: 'manage_products', component: ProductManagementComponent },\r\n      { path: 'sales_report', component: SalesReportComponent },\r\n      { path: 'growth_report', component: GrowthReportComponent },\r\n      { path: 'order', component: ProductOrdersComponent }\r\n    ]\r\n  },\r\n  { path: 'cart', component: CartComponent },\r\n  {\r\n    path: 'user', component: UserManagementComponent, children: [\r\n      { path: 'app-login', component: LoginComponent },\r\n      { path: 'app-signup', component: SignupComponent }\r\n    ]\r\n  },\r\n  {\r\n    path: 'app-customeroperations', component: CustomerOperationsComponent\r\n    , canActivate: [AddressManagementGuardService], children: [\r\n      { path: 'app-addresscreation', component: AddressCreationComponent },\r\n      { path: 'app-deleteaddr', component: DeleteAddressComponent },\r\n      { path: 'app-updateaddr', component: UpdateAddressComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, routerOptions)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AddressService } from './service/address.service';\r\nimport { CartService } from './service/cart.service';\r\nimport { ProductService } from './service/product.service';\r\nimport { UserService } from './service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  animations: [\r\n    trigger('expansion', [\r\n      state('slide', style({\r\n        opacity: 0,\r\n      })),\r\n      state('switch', style({\r\n        transform: 'translateX(30px)',\r\n      })),\r\n      state('slide-up', style({\r\n        transform: 'translateY(-10px)',\r\n        opacity: 0\r\n      })),\r\n      transition('slide =>*', [\r\n        animate(800, keyframes([\r\n          style({\r\n            transform: 'translateY(-20px)',\r\n            opacity: 0,\r\n            offset: 0\r\n          }),\r\n          style({\r\n            transform: 'translateY(40px)',\r\n            opacity: 0.5,\r\n            offset: 0.5\r\n          }),\r\n          style({\r\n            transform: 'translateY(0px)',\r\n            opacity: 1,\r\n            offset: 1\r\n          })\r\n        ]))\r\n      ]),\r\n      transition('*<=>switch', animate(500)),\r\n      transition('*<=>slide-up', animate(300))\r\n    ])]\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n  state1 = 'slide';\r\n  state2 = null;\r\n  state3 = null;\r\n\r\n  @HostListener(\"document:scroll\")\r\n  scrollFunction() {\r\n    if (document.documentElement.scrollTop > 0) {\r\n      this.state2 = 'switch';\r\n      this.state3 = 'slide-up'\r\n    } else {\r\n      this.state2 = null;\r\n      this.state3 = null;\r\n    }\r\n  }\r\n\r\n  constructor(public router: Router, public userService: UserService,\r\n    public productService: ProductService, private cartService: CartService,\r\n    private address: AddressService) {\r\n  }\r\n\r\n  onLogOut() {\r\n    this.userService.userRole = null;\r\n    this.userService.sharedId = null;\r\n    this.cartService.onLoad();\r\n    this.address.addressId = null;\r\n  }\r\n}\r\n","<div class=\"main-page\">\r\n\r\n  <nav [ngClass]=\"{'sticky-top':state2}\">\r\n    <mat-toolbar class=\"px-5\">\r\n      <a [@expansion]=\"state2\" routerLink=\"home\" mat-icon-button [disableRipple]=\"true\" class=\"mr-5\">\r\n        <img width=\"50px\" height=\"60px\" src=\"/assets/images/go1.png\" style=\"margin-top: -10px;\">\r\n      </a>\r\n      <span [hidden]=\"state2\" style=\"font-size:30px;\">GREAT OUTDOOR</span>\r\n      <a class=\"menu-items\" mat-button routerLink=\"home\" routerLinkActive=\"active\">HOME</a>\r\n      <a class=\"menu-items\" mat-button routerLink=\"cart\" routerLinkActive=\"active\">MY CART</a>\r\n      <a class=\"menu-items\" mat-button routerLink=\"#\" routerLinkActive=\"active\">WISHLIST</a>\r\n      <a class=\"menu-items\" mat-button routerLink=\"#\" routerLinkActive=\"active\"\r\n        (click)=\"state1=state1=='slide'?null:'slide'\">CATEGORIES</a>\r\n      <span class=\"example-spacer\"></span>\r\n      <a class=\"validation\" mat-button routerLink=\"user/app-login\" *ngIf=\"!userService.userRole\">Sign in</a>\r\n      <a class=\"validation\" mat-button routerLink=\"user/app-signup\" *ngIf=\"!userService.userRole\">Sign up</a>\r\n      <a mat-icon-button [matMenuTriggerFor]=\"menu\" [disableRipple]=\"true\">\r\n        <mat-icon>settings</mat-icon>\r\n      </a>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button routerLink=\"dashboard/manage_products\" routerLinkActive=\"active\" mat-menu-item>\r\n          <mat-icon>dashboard</mat-icon>\r\n          <span>Dashboard</span>\r\n        </button>\r\n        <button mat-menu-item routerLink=\"app-customeroperations\">\r\n          <mat-icon>home</mat-icon>\r\n          <span>Address Management</span>\r\n        </button>\r\n        <button mat-menu-item routerLink=\"home\" (click)=\"onLogOut()\" [disabled]=\"!userService.userRole\">\r\n          <mat-icon>exit_to_app</mat-icon>\r\n          <span>Sign Out</span>\r\n        </button>\r\n      </mat-menu>\r\n    </mat-toolbar>\r\n    <div [@expansion]=\"state3\" class=\"d-flex\" *ngIf=\"router.url=='/home'\"\r\n      style=\"background-color: black;color:white;font-size:12px;height:40px;width: 100%;\">\r\n      <div class=\"search-bar col-md-3\">\r\n        <input type=\"text\" placeholder=\"Find..\" autocomplete=\"off\" #keyword>\r\n        <a mat-icon-button [disableRipple]=\"true\" (click)=\"productService.searchProduct(keyword.value)\">\r\n          <mat-icon>search</mat-icon>\r\n        </a>\r\n      </div>\r\n      <div class=\"col-md-9\">\r\n        <p style=\"margin-left: 20%;margin-top: 10px;\">\r\n          Free shipping when your order is above €99.99 | 2\r\n          Year Limited Warranty.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div [@expansion]=\"state1\" class=\"categories d-flex text-center\">\r\n      <div class=\"col-md-3\">\r\n        <img width=\"100%\" height=\"70%\" src=\"https://wallpapercave.com/wp/wp4810853.jpg\">\r\n        <a class=\"mt-4\" (click)=\"state1=state1=='slide'?null:'slide'\" mat-button routerLink=\"mobile\"\r\n          routerLinkActive=\"active\">\r\n          <h1>MOBILE</h1>\r\n        </a>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <img width=\"100%\" height=\"70%\"\r\n          src=\"https://www.hdwallback.net/wp-content/uploads/2015/10/jennifer-lawrence-desktop-images.jpg\">\r\n        <a class=\"mt-4\" (click)=\"state1=state1=='slide'?null:'slide'\" mat-button routerLink=\"clothes\"\r\n          routerLinkActive=\"active\">\r\n          <h1>CLOTHES</h1>\r\n        </a>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <img width=\"100%\" height=\"70%\" src=\"https://all4desktop.com/data_images/original/4235841-nba-wallpaper.jpg\">\r\n        <a class=\"mt-4\" (click)=\"state1=state1=='slide'?null:'slide'\" mat-button routerLink=\"sports\"\r\n          routerLinkActive=\"active\">\r\n          <h1>SPORTS</h1>\r\n        </a>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <img width=\"100%\" height=\"70%\"\r\n          src=\"https://wallpapermemory.com/uploads/339/vegetables-wallpaper-full-hd-1920x1080-114842.jpg\">\r\n        <a class=\"mt-4\" (click)=\"state1=state1=='slide'?null:'slide'\" mat-button routerLink=\"grocery\"\r\n          routerLinkActive=\"active\">\r\n          <h1>GROCERY</h1>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CartComponent } from './components/cart/cart.component';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { SalesReportComponent } from './components/dashboard/sales-report/sales-report.component';\r\nimport { GrowthReportComponent } from './components/dashboard/growth-report/growth-report.component';\r\nimport { EditProductComponent } from './components/dashboard/edit-product/edit-product.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { ProductOrdersComponent } from './components/dashboard/product-orders/product-orders.component';\r\nimport { ProductService } from './service/product.service';\r\nimport { OrderService } from './service/order.service';\r\nimport { CartService } from './service/cart.service';\r\nimport { ProductManagementComponent } from './components/dashboard/product-management/product-management.component';\r\nimport { ProductComponent } from './components/product/product.component';\r\nimport { PaymentGatewayComponent } from './components/payment-gateway/payment-gateway.component';\r\nimport { ProductCommunicationService } from './communication/product-communication.service';\r\nimport { OrderCommunicationService } from './communication/order-communication.service';\r\nimport { CartCommunicationService } from './communication/cart-communication.service';\r\nimport { GrowthReportCommunicationService } from './communication/growth-report-communication.service';\r\nimport { SalesReportCommunicationService } from './communication/sales-report-communication.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SalesReportService } from './service/sales-report.service';\r\nimport { GrowthReportService } from './service/growth-report.service';\r\nimport { ProductFilterPipe } from './pipe/product-filter.pipe';\r\nimport { HandleErrorService } from './handle_error/handle-error.service';\r\nimport { AddressCreationComponent } from './components/user-management/customer-operations/address-creation/address-creation.component';\r\nimport { UpdateAddressComponent } from './components/user-management/customer-operations/update-address/update-address.component';\r\nimport { DeleteAddressComponent } from './components/user-management/customer-operations/delete-address/delete-address.component';\r\nimport { CustomerOperationsComponent } from './components/user-management/customer-operations/customer-operations.component';\r\nimport { LoginComponent } from './components/user-management/login/login.component';\r\nimport { SignupComponent } from './components/user-management/signup/signup.component';\r\nimport { AddressService } from './service/address.service';\r\nimport { UserService } from './service/user.service';\r\nimport { UserManagementComponent } from './components/user-management/user-management.component';\r\nimport { NotificationService } from './service/notification.service';\r\nimport { AddressManagementGuardService } from './auth_guard/address-management-guard.service';\r\nimport { DashboardGuardService } from './auth_guard/dashoard-guard.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    CartComponent,\r\n    DashboardComponent,\r\n    SalesReportComponent,\r\n    GrowthReportComponent,\r\n    EditProductComponent,\r\n    ProductOrdersComponent,\r\n    ProductManagementComponent,\r\n    ProductComponent,\r\n    PaymentGatewayComponent,\r\n    ProductFilterPipe,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    UserManagementComponent,\r\n    CustomerOperationsComponent,\r\n    AddressCreationComponent,\r\n    DeleteAddressComponent,\r\n    UpdateAddressComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    CarouselModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [ProductService, OrderService, CartService, ProductCommunicationService,\r\n    CartCommunicationService, GrowthReportCommunicationService,\r\n    OrderCommunicationService, SalesReportCommunicationService,\r\n    SalesReportService, GrowthReportService, HandleErrorService,\r\n    AddressService, UserService, NotificationService, AddressManagementGuardService,\r\n    DashboardGuardService],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [EditProductComponent, ProductComponent, PaymentGatewayComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { UserService } from '../service/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressManagementGuardService implements CanActivate {\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    return this.userService.userRole.toLowerCase() == 'customer';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { UserService } from '../service/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardGuardService implements CanActivate {\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    return this.userService.userRole.toLowerCase() == 'admin';\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Cart } from '../model/cart.model';\r\nimport { HandleErrorService } from '../handle_error/handle-error.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CartCommunicationService {\r\n\r\n  private baseUrl = 'http://localhost:8000/api/cart';\r\n  constructor(private httpClient: HttpClient, private handleErrorService: HandleErrorService) { }\r\n\r\n  // getting cart items of particular user\r\n  getCartByUserId(userId: string): Observable<Cart[]> {\r\n    return this.httpClient.get<Cart[]>(`${this.baseUrl}/${userId}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // adding item to cart \r\n  addItemToCart(cartItem: Cart) {\r\n    return this.httpClient.post(`${this.baseUrl}/addToCart`, cartItem)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // deleting cart item using cart id\r\n  deleteCartItem(cartId: number) {\r\n    return this.httpClient.delete(`${this.baseUrl}/deleteCartItem/${cartId}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // deleting cart list using user id\r\n  deleteCartlist(userId: string) {\r\n    return this.httpClient.delete(`${this.baseUrl}/deleteCartlist/${userId}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { GrowthReport } from '../model/growth-report.model';\r\nimport { HandleErrorService } from '../handle_error/handle-error.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class GrowthReportCommunicationService {\r\n\r\n  private baseUrl = 'http://localhost:8000/api/growth_report';\r\n\r\n  constructor(private httpClient: HttpClient, private handleErrorService: HandleErrorService) { }\r\n\r\n  // getting all the growth report \r\n  getAllGrowthReports(): Observable<GrowthReport[]> {\r\n    return this.httpClient.get<GrowthReport[]>(this.baseUrl)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  //adding growth report in database \r\n  addGrowthReport() {\r\n    return this.httpClient.post(this.baseUrl, null)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // deleting all the growth report details\r\n  deleteAllGrowthReport() {\r\n    return this.httpClient.delete(`${this.baseUrl}/deleteAll`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  //deleting growth report entities by id\r\n  deleteGrowthReportById(id: number) {\r\n    return this.httpClient.delete(`${this.baseUrl}/delete/${id}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n}\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Order } from '../model/order.model';\r\nimport { HandleErrorService } from '../handle_error/handle-error.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderCommunicationService {\r\n\r\n  private baseUrl = 'http://localhost:8000/api/order';\r\n\r\n  constructor(private httpClient: HttpClient, private handleErrorService: HandleErrorService) { }\r\n\r\n  //getting all the order details\r\n  getAllOrders(): Observable<Order[]> {\r\n    return this.httpClient.get<Order[]>(this.baseUrl)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  //getting order by user id\r\n  getOrderByUserId(userId: string) {\r\n    return this.httpClient.get<Order[]>(`${this.baseUrl}/${userId}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // adding order in database\r\n  addOrder(order: Order) {\r\n    return this.httpClient.post(this.baseUrl, order)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // updating order schedule for departure and arrival\r\n  updateOrderSchedule(order: Order) {\r\n    return this.httpClient.put(`${this.baseUrl}/updateSchedule`, order)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  //removing all order details\r\n  removeAllOrders() {\r\n    return this.httpClient.delete(`${this.baseUrl}/removeAll`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  //removing order details by order id\r\n  removeOrderById(id: string) {\r\n    return this.httpClient.delete(`${this.baseUrl}/remove/${id}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Product } from '../model/product.model';\r\nimport { HandleErrorService } from '../handle_error/handle-error.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductCommunicationService {\r\n\r\n  private baseUrl = 'http://localhost:8000/api/products';\r\n\r\n  constructor(private httpClient: HttpClient, private handleErrorService: HandleErrorService) { }\r\n\r\n  // get all products to show them in home page\r\n  getProducts(): Observable<Product[]> {\r\n    return this.httpClient.get<Product[]>(this.baseUrl);\r\n  }\r\n\r\n  // get product by product id\r\n  getProductById(productId: string) {\r\n    return this.httpClient.get<Product>(`${this.baseUrl}/${productId}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // searching for specific product\r\n  productSearch(keyword: string) {\r\n    return this.httpClient.get<Product[]>(`${this.baseUrl}/search/${keyword}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // product filtering method\r\n  productFilter(maxPrice: number) {\r\n    return this.httpClient.get<Product[]>(`${this.baseUrl}/filter/${maxPrice}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // adding new product to the database\r\n  addProduct(product: Product) {\r\n    return this.httpClient.post(`${this.baseUrl}`, product)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // updating pre existing products\r\n  updateProduct(product: Product) {\r\n    return this.httpClient.put(`${this.baseUrl}`, product)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // deducting product quantity every time they are being sold\r\n  updateProductQuantity(quantity: number, productId: string) {\r\n    return this.httpClient.put(`${this.baseUrl}/updateQuantity/${quantity}/${productId}`, null)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // deleting product by product id\r\n  deleteProduct(id: string) {\r\n    return this.httpClient.delete(`${this.baseUrl}/delete/${id}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HandleErrorService } from '../handle_error/handle-error.service';\r\nimport { SalesReport } from '../model/sales-report.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SalesReportCommunicationService {\r\n\r\n  private baseUrl = 'http://localhost:8000/api/sales_report';\r\n\r\n  constructor(private httpClient: HttpClient, private handleErrorService: HandleErrorService) { }\r\n\r\n  // getting all the sales report about every product\r\n  getAllSalesReport(): Observable<SalesReport[]> {\r\n    return this.httpClient.get<SalesReport[]>(this.baseUrl)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // updating sales report whenever order is placed\r\n  updateSalesReport(salesReport: SalesReport) {\r\n    return this.httpClient.put(this.baseUrl, salesReport)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // deleting all the sales report\r\n  deleteAllSalesReport() {\r\n    return this.httpClient.delete(`${this.baseUrl}/deleteAll`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n\r\n  // deleting sales report by id\r\n  deleteSalesReportById(id: number) {\r\n    return this.httpClient.delete(`${this.baseUrl}/delete/${id}`)\r\n      .pipe(catchError(this.handleErrorService.handleError));\r\n  }\r\n}\r\n","import { Component} from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { CartService } from 'src/app/service/cart.service';\r\nimport { PaymentGatewayComponent } from '../payment-gateway/payment-gateway.component';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent {\r\n\r\n  constructor(public cartService: CartService, private dialog: MatDialog) { }\r\n\r\n  onProceedToPay() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = false;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.width = \"60%\";\r\n    dialogConfig.backdropClass = 'backdropBackground';\r\n    dialogConfig.panelClass = 'custom-dialog-container';\r\n    dialogConfig.data = { amount: this.cartService.subTotal, quantity: this.cartService.totalQuantity };\r\n    this.dialog.open(PaymentGatewayComponent, dialogConfig);\r\n  }\r\n}\r\n","<div class=\"cart-page\" style=\"position: absolute; z-index:5;width: 100%;\">\r\n\r\n    <h1 class=\" m-3 font-weight-bold\" style=\"font-family: 'Aclonica';\">Shopping Cart</h1>\r\n    <div *ngIf=\"cartService.totalQuantity;else NoItemFound\" class=\" d-flex\">\r\n        <div class=\"cart-list col-md-9\">\r\n            <ul class=\"list-group\" *ngFor=\"let item of cartService.cartItems;let i = index\">\r\n                <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3 text-center\">\r\n                            <img width=\"150px\" height=\"200px\"\r\n                                [src]=\"cartService.findProduct(item.productId).productImage\">\r\n                        </div>\r\n\r\n                        <div class=\"col-md-4 description mt-3\">\r\n                            <h1 class=\"text-primary\">{{cartService.findProduct(item.productId).productName}}</h1>\r\n                            <p class=\"text-success\">In Stock</p>\r\n                            <p>Eligible for FREE Shipping</p>\r\n                            <span class=\"badge badge-pill badge-dark\">Fulfilled</span><br>\r\n                            <button mat-flat-button style=\"margin-left:-13px;\"\r\n                                (click)=cartService.deleteItem(item)>Delete</button>\r\n                            <span class=\"divider\"></span>\r\n                            <button mat-flat-button>Save for later</button>\r\n                            <span class=\"divider\"></span>\r\n                            <button mat-flat-button>See more like this</button>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-4 text-right mt-3\">\r\n                            <h3>{{item.cartItemPrice}} ₹</h3>\r\n                            <p style=\"margin-top: 35%;margin-left:10%\">Quantity({{item.quantity}})</p>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <h2 class=\"float-right\">Subtotal({{cartService.totalQuantity}} item) : {{cartService.subTotal}} ₹</h2>\r\n        </div>\r\n\r\n        <div class=\"payment-details col-md-3\" style=\"margin-left: -15px;\">\r\n            <ul class=\"list-group\">\r\n                <li class=\"list-group-item text-center\">\r\n                    <h3 class=\"text-success\">Your order is eligible for FREE Delivery.</h3>\r\n                </li>\r\n                <li class=\"list-group-item text-center\" style=\"background-color:rgba(0, 0, 0, 0.089);\">\r\n                    <h1>Subtotal({{cartService.totalQuantity}} item) : {{cartService.subTotal}} ₹</h1>\r\n                    <button class=\"mt-2 w-75 create-button\" mat-raised-button (click)=\"onProceedToPay()\"\r\n                        [disabled]=\"!cartService.subTotal\">Proceed to\r\n                        Buy</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <ng-template #NoItemFound>\r\n        <img style=\"margin-left: 30%;\" width=\"900px\" height=\"600px\"\r\n            src=\"https://star-leather.com/public/assets/frontend/images/shopping_cart_empty.jpg\">\r\n    </ng-template>\r\n</div>","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent {\r\n  constructor() { }\r\n\r\n}\r\n","<!-- main dashboard with side nav where admin can perform all the operations -->\r\n<div class=\"example-container\">\r\n  <mat-sidenav-container class=\"example-sidenav-container\">\r\n    <mat-sidenav id=\"sidenav\" #snav mode=\"over\" (mouseenter)=\"snav.toggle()\" (mouseleave)=\"snav.toggle()\">\r\n      <mat-nav-list>\r\n        <a class=\"mt-3\" mat-list-item routerLink=\"manage_products\">PRODUCT<span class=\"example-spacer\"></span>\r\n          <mat-icon>shopping_bag</mat-icon>\r\n        </a>\r\n        <a class=\"mt-3\" mat-list-item routerLink=\"order\">ORDERS<span class=\"example-spacer\"></span>\r\n          <mat-icon>list_alt</mat-icon>\r\n        </a>\r\n        <a class=\"mt-3\" mat-list-item routerLink=\"sales_report\">SALES REPORT<span class=\"example-spacer\"></span>\r\n          <mat-icon>leaderboard</mat-icon>\r\n        </a>\r\n        <a class=\"mt-3\" mat-list-item routerLink=\"growth_report\">GROWTH REPORT<span class=\"example-spacer\"></span>\r\n          <mat-icon>trending_up</mat-icon>\r\n        </a>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ProductService } from 'src/app/service/product.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-product',\r\n  templateUrl: './edit-product.component.html',\r\n  styleUrls: ['./edit-product.component.css']\r\n})\r\nexport class EditProductComponent implements OnInit {\r\n\r\n  header: string;\r\n\r\n  constructor(private dialogRef: MatDialogRef<EditProductComponent>,\r\n    public productService: ProductService) { }\r\n\r\n  ngOnInit() {\r\n    this.header = this.productService.tempIndex == -1 ? \"ADD PRODUCT\" : \"UPDATE PRODUCT\";\r\n  }\r\n\r\n  onSubmit() {\r\n    this.productService.saveProduct();\r\n    this.onClose();\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onClear() {\r\n    this.productService.formGroup.reset();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<!-- This page shows product details -->\r\n<div class=\"edit-product\">\r\n\r\n  <mat-toolbar>\r\n    <span>{{header}}</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button mat-icon-button (click)=\"onClose()\">\r\n      <mat-icon>cancel</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n\r\n  <form [formGroup]=\"productService.formGroup\" (ngSubmit)=\"onSubmit()\">\r\n\r\n    <mat-grid-list cols=\"3\" rowHeight=\"100px\">\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>PRODUCT ID</mat-label>\r\n          <input formControlName=\"productId\" matInput placeholder=\"Product Id*\">\r\n          <mat-error *ngIf=\"productService.formGroup.controls['productId'].errors?.required\">Id is mandatory.\r\n          </mat-error>\r\n          <!-- <mat-error *ngIf=\"productService.formGroup.controls['productId'].errors?.pattern\">Id should be number only and\r\n            not 0.</mat-error> -->\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>PRODUCT NAME</mat-label>\r\n          <input formControlName=\"productName\" matInput placeholder=\"Product Name*\">\r\n          <mat-error>Name is mandatory.</mat-error>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>PRODUCT PRICE</mat-label>\r\n          <input formControlName=\"productPrice\" matInput placeholder=\"Product Price*\">\r\n          <mat-error *ngIf=\"productService.formGroup.controls['productPrice'].errors?.required\">Price is mandatory.\r\n          </mat-error>\r\n          <!-- <mat-error *ngIf=\"productService.formGroup.controls['productPrice'].errors?.pattern\">It should be number only.\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>PRODUCT COLOR</mat-label>\r\n          <input formControlName=\"productColor\" matInput placeholder=\"Product Color*\">\r\n          <mat-error>Color is mandatory.</mat-error>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>PRODUCT CATEGORY</mat-label>\r\n          <mat-select formControlName=\"productCategory\" name=\"category\">\r\n            <mat-option>None</mat-option>\r\n            <mat-option value=\"Mobile\">Mobile</mat-option>\r\n            <mat-option value=\"Clothes\">Clothes</mat-option>\r\n            <mat-option value=\"Sports\">Sports</mat-option>\r\n            <mat-option value=\"Grocery\">Grocery</mat-option>\r\n          </mat-select>\r\n          <mat-hint>You have to select one</mat-hint>\r\n          <mat-error>Category is mandatory.</mat-error>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>PRODUCT QUANTITY</mat-label>\r\n          <input formControlName=\"productQuantity\" matInput placeholder=\"Product Quantity*\">\r\n          <mat-error *ngIf=\"productService.formGroup.controls['productQuantity'].errors?.required\">Quantity is\r\n            mandatory.</mat-error>\r\n          <mat-error *ngIf=\"productService.formGroup.controls['productQuantity'].errors?.maxlength\">Quantity can be max\r\n            999.</mat-error>\r\n          <!-- <mat-error *ngIf=\"productService.formGroup.controls['productQuantity'].errors?.pattern\">It should be in number\r\n            only and not 0.</mat-error> -->\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>PRODUCT MANUFACTURER</mat-label>\r\n          <input formControlName=\"productManufacturer\" matInput placeholder=\"Product Manufacturer*\">\r\n          <mat-hint>It is actually brand name</mat-hint>\r\n          <mat-error *ngIf=\"productService.formGroup.controls['productManufacturer'].errors?.required\">Manufacturer is\r\n            mandatory.</mat-error>\r\n          <mat-error *ngIf=\"productService.formGroup.controls['productManufacturer'].errors?.pattern\">It should be in\r\n            alphabets only.</mat-error>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile colspan=\"2\" rowspan=\"2\">\r\n        <img [src]=\"image.value\"\r\n          onerror=\"this.src='https://icons.iconarchive.com/icons/custom-icon-design/flatastic-11/256/Shopping-basket-add-icon.png'\"\r\n          width=\"200px\" height=\"200px\" style=\"margin-left:-100px ;\">\r\n        <mat-form-field appearance=\"standard\" style=\"left:96px;top:-50px;\">\r\n          <mat-label>PRODUCT IMAGE</mat-label>\r\n          <input formControlName=\"productImage\" matInput placeholder=\"Product Image*\" #image>\r\n          <mat-error>Image is mandatory.</mat-error>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>PRODUCT SPECIFICATION</mat-label>\r\n          <input formControlName=\"productSpecification\" matInput placeholder=\"Product Specification*\">\r\n          <mat-error>Specification is mandatory.</mat-error>\r\n        </mat-form-field>\r\n      </mat-grid-tile>\r\n\r\n    </mat-grid-list>\r\n\r\n    <div class=\"d-flex justify-content-center\">\r\n      <button class=\"m-3\" mat-raised-button color=\"primary\" type=\"submit\"\r\n        [disabled]=\"productService.formGroup.invalid\">Submit</button>\r\n      <button class=\"m-3\" mat-raised-button color=\"warn\" (click)=\"onClear()\">Clear</button>\r\n    </div>\r\n  </form>\r\n</div>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { GrowthReport } from 'src/app/model/growth-report.model';\r\nimport { GrowthReportService } from 'src/app/service/growth-report.service';\r\n\r\n@Component({\r\n  selector: 'app-growth-report',\r\n  templateUrl: './growth-report.component.html',\r\n  styleUrls: ['./growth-report.component.css']\r\n})\r\n\r\nexport class GrowthReportComponent implements OnInit, AfterViewInit {\r\n\r\n  displayedColumns: string[] = ['growthReportId', 'currentdate', 'revenue',\r\n    'amountChange', 'percentageGrowth', 'colorCode'];\r\n\r\n  dataSource: MatTableDataSource<GrowthReport>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private growthReportService: GrowthReportService) {\r\n    this.dataSource = new MatTableDataSource(growthReportService.growthReport);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.growthReportService.subject.subscribe(\r\n      (growthReport) => {\r\n        this.dataSource = new MatTableDataSource(growthReport);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<!-- this page shows growth report ,how much profit or loss company is making-->\r\n<div class=\"growth-report-table\">\r\n\r\n  <div class=\"show-label\"><span class=\"badge badge-pill\">GROWTH REPORT</span></div>\r\n\r\n  <mat-form-field>\r\n    <mat-label style=\"color: black;\">Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Red\" #input>\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <ng-container matColumnDef=\"growthReportId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> GROWTH REPORT ID </th>\r\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.colorCode\"> {{row.growthReportId}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"currentdate\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> CURRENT DATE </th>\r\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.colorCode\"> {{row.currentdate}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"revenue\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> REVENUE </th>\r\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.colorCode\"> {{row.revenue}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amountChange\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AMOUNT CHANGE </th>\r\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.colorCode\"> {{row.amountChange}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"percentageGrowth\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> GROWTH(%) </th>\r\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.colorCode\"> {{row.percentageGrowth}}% </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"colorCode\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> COLOR CODE </th>\r\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.colorCode\"> {{row.colorCode}} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">\r\n          <mat-spinner diameter=40 style=\"margin-left:80%;\"></mat-spinner>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  </div>\r\n  <div class=\"d-flex justify-content-center\">\r\n    <div class=\"d-flex m-4\">\r\n      <div class=\"symbol1 m-2\"></div>\r\n      <p class=\"mt-2\">: growth(%) < 2</p>\r\n    </div>\r\n    <div class=\"d-flex m-4\">\r\n      <div class=\"symbol2 m-2\"></div>\r\n      <p class=\"mt-2\">: 2 < growth(%) < 50</p>\r\n    </div>\r\n    <div class=\"d-flex m-4\">\r\n      <div class=\"symbol3 m-2\"></div>\r\n      <p class=\"mt-2\">: growth(%) > 50</p>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Product } from 'src/app/model/product.model';\r\nimport { ProductService } from 'src/app/service/product.service';\r\nimport { EditProductComponent } from '../edit-product/edit-product.component';\r\n\r\n@Component({\r\n  selector: 'app-product-management',\r\n  templateUrl: './product-management.component.html',\r\n  styleUrls: ['./product-management.component.css']\r\n})\r\nexport class ProductManagementComponent implements OnInit, AfterViewInit {\r\n\r\n  displayedColumns: string[] = ['productId', 'productName', 'productPrice',\r\n    'productColor', 'productCategory',\r\n    'productQuantity', 'productManufacturer', 'productSpecification', 'actions'];\r\n\r\n  dataSource: MatTableDataSource<Product>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private dialog: MatDialog, public productService: ProductService) {\r\n    this.dataSource = new MatTableDataSource(productService.products);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.productService.subject.subscribe(\r\n      (products) => {\r\n        this.dataSource = new MatTableDataSource(products);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  onCreate(row: any) {\r\n    this.productService.initializeFormGroup(row);\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.backdropClass = 'backdropBackground';\r\n    dialogConfig.width = \"60%\";\r\n    this.dialog.open(EditProductComponent, dialogConfig);\r\n  }\r\n\r\n  deleteProduct(row: any) {\r\n    this.productService.deleteProduct(row);\r\n  }\r\n}\r\n\r\n\r\n","<!-- admin uses this page to perform CRUD over products -->\r\n<div class=\"products-table\">\r\n\r\n\r\n  <div class=\"show-label\"><span class=\"badge badge-pill\">ALL THE PRODUCTS</span></div>\r\n  <mat-form-field>\r\n    <mat-label style=\"color: black;\">Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Watch\" #input>\r\n  </mat-form-field>\r\n\r\n\r\n  <button class=\"create-button\" mat-raised-button (click)=\"onCreate(null)\">\r\n    <mat-icon>add_circle</mat-icon>Create\r\n  </button>\r\n\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n\r\n      <ng-container matColumnDef=\"productId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Id </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.productId}} </td>\r\n      </ng-container>\r\n\r\n\r\n      <ng-container matColumnDef=\"productName\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> NAME </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.productName}} </td>\r\n      </ng-container>\r\n\r\n\r\n      <ng-container matColumnDef=\"productPrice\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> PRICE </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.productPrice}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"productColor\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> COLOR </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.productColor}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"productCategory\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> CATEGORY </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.productCategory}} </td>\r\n      </ng-container>\r\n\r\n\r\n      <ng-container matColumnDef=\"productQuantity\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.productQuantity}} </td>\r\n      </ng-container>\r\n\r\n\r\n      <ng-container matColumnDef=\"productManufacturer\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MANUFACTURER </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.productManufacturer}} </td>\r\n      </ng-container>\r\n\r\n\r\n      <ng-container matColumnDef=\"productSpecification\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> SPECIFICATION </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.productSpecification}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th class=\"pl-3\" mat-header-cell *matHeaderCellDef mat-sort-header> ACTIONS </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <button mat-icon-button matTooltip=\"Update product\" (click)=\"onCreate(row)\">\r\n            <mat-icon>launch</mat-icon>\r\n          </button>\r\n\r\n          <button mat-icon-button matTooltip=\"Delete product\" color=\"warn\" (click)=\"deleteProduct(row)\">\r\n            <mat-icon>delete_outline</mat-icon>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">\r\n          <mat-spinner diameter=40 style=\"margin-left:130%;\"></mat-spinner>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  </div>\r\n\r\n</div>","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Order } from 'src/app/model/order.model';\r\nimport { Product } from 'src/app/model/product.model';\r\nimport { OrderService } from 'src/app/service/order.service';\r\n\r\n@Component({\r\n  selector: 'app-product-orders',\r\n  templateUrl: './product-orders.component.html',\r\n  styleUrls: ['./product-orders.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ]\r\n})\r\n\r\nexport class ProductOrdersComponent implements OnInit, AfterViewInit {\r\n\r\n  columnsToDisplay: string[] = ['orderId', 'userId', 'products', 'totalPrice',\r\n    'totalQuantity', 'addressId', 'dispatchDate', 'arrivalDate', 'actions'];\r\n\r\n  date1: string;\r\n  date2: string;\r\n  expandedElement: Product | null;\r\n  dataSource: MatTableDataSource<Order>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private dialog: MatDialog, public orderService: OrderService) {\r\n    this.dataSource = new MatTableDataSource(orderService.orders);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.orderService.subject.subscribe(\r\n      (orders) => {\r\n        this.dataSource = new MatTableDataSource(orders);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  updateSchedule(orderId) {\r\n    let index = this.orderService.orders.findIndex(x => x.orderId === orderId);\r\n    if (this.date1 == null) {\r\n      this.date1 = this.orderService.orders[index].dispatchDate;\r\n    }\r\n    if (this.date2 == null) {\r\n      this.date2 = this.orderService.orders[index].arrivalDate;\r\n    }\r\n    this.orderService.updateSchedule(index, this.date1, this.date2);\r\n  }\r\n\r\n  deleteOrder(orderId) {\r\n    let index = this.orderService.orders.findIndex(x => x.orderId === orderId);\r\n    this.orderService.deleteOrder(index);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- this page shows all the orders placed  -->\r\n<div class=\"order-details-page\">\r\n\r\n  <div class=\"show-label\"><span class=\"badge badge-pill\">PRODUCT ORDERS</span></div>\r\n  <mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Watch\" #input>\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n\r\n    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows matSort>\r\n\r\n      <ng-container matColumnDef=\"orderId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>ORDER ID </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderId}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"userId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.userId}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"products\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>PRODUCTS</th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.products}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"totalPrice\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>TOTAL PRICE </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.totalPrice}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"totalQuantity\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>TOTAL QUANTITY </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.totalQuantity}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"addressId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>ADDRESS ID </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.addressId}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"dispatchDate\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>DISPATCH DATE </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.dispatchDate}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"arrivalDate\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>ARRIVAL DATE </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.arrivalDate}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th class=\"pl-3\" mat-header-cell *matHeaderCellDef mat-sort-header>ACTIONS </th>\r\n        <td mat-cell *matCellDef=\"let element;\">\r\n          <button mat-icon-button matTooltip=\"Update schedule\" (click)=\"updateSchedule(element['orderId'])\">\r\n            <mat-icon>launch</mat-icon>\r\n          </button>\r\n          <button mat-icon-button matTooltip=\"Delete order\" color=\"warn\" (click)=\"deleteOrder(element['orderId'])\">\r\n            <mat-icon>delete_outline</mat-icon>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"expandedDetail\">\r\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n          <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n\r\n            <div class=\"update-schedule row justify-content-center text-center pb-5\">\r\n\r\n              <div class=\"col-md-4\">\r\n                <label>DISPATCH DATE</label>\r\n                <input #dDate type=\"date\" class=\"form-control\" (change)=\"date1=dDate.value\"\r\n                  [value]=\"element['dispatchDate']\" placeholder=\"mm/dd/yyyy\" autocomplete=\"off\">\r\n              </div>\r\n\r\n              <div class=\"col-md-4\">\r\n                <label>ARRIVAL DATE</label>\r\n                <input #aDate type=\"date\" class=\"form-control\" (change)=\"date2=aDate.value\"\r\n                  [value]=\"element['arrivalDate']\" placeholder=\"mm/dd/yyyy\" autocomplete=\"off\">\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n      <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\r\n        [class.example-expanded-row]=\"expandedElement === element\"\r\n        (click)=\"expandedElement = expandedElement === element ? null : element;\">\r\n      </tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">\r\n          <mat-spinner diameter=40 style=\"margin-left:130%;\"></mat-spinner>\r\n        </td>\r\n      </tr>\r\n\r\n    </table>\r\n    \r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  </div>\r\n\r\n</div>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SalesReport } from 'src/app/model/sales-report.model';\r\nimport { SalesReportService } from 'src/app/service/sales-report.service';\r\n\r\n@Component({\r\n  selector: 'app-sales-report',\r\n  templateUrl: './sales-report.component.html',\r\n  styleUrls: ['./sales-report.component.css']\r\n})\r\nexport class SalesReportComponent implements OnInit, AfterViewInit {\r\n\r\n\r\n  displayedColumns: string[] = ['salesReportId', 'productId', 'productName', 'quantitySold',\r\n    'totalSale'];\r\n\r\n  dataSource: MatTableDataSource<SalesReport>;\r\n  totalRevenue: number = 0;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(public salesReportService: SalesReportService) {\r\n    this.dataSource = new MatTableDataSource(salesReportService.salesReport);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.salesReportService.subject.subscribe(\r\n      (salesReport) => {\r\n        this.dataSource = new MatTableDataSource(salesReport);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getTotalRevenue() {\r\n    if (this.salesReportService.getTotalRevenue()) {\r\n      return this.totalRevenue = this.salesReportService.getTotalRevenue();\r\n    }\r\n    return this.totalRevenue;\r\n  }\r\n}\r\n","<!-- this page shows sales report and revenue made by every product -->\r\n<div class=\"sales-report-table\">\r\n  <div class=\"show-label\"><span class=\"badge badge-pill\">SALES REPORT</span></div>\r\n  <mat-form-field>\r\n    <mat-label style=\"color: black;\">Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Watch\" #input>\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <ng-container matColumnDef=\"salesReportId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> SALES REPORT ID </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.salesReportId}} </td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"productId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT ID </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.productId}} </td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"productName\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT NAME </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.productName}} </td>\r\n        <td mat-footer-cell *matFooterCellDef></td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"quantitySold\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> QUANTITY SOLD </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.quantitySold}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> TOTAL REVENUE</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"totalSale\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> TOTAL SALE </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.totalSale}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> {{getTotalRevenue()}} ₹ </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">\r\n          <mat-spinner diameter=40 style=\"margin-left:60%;\"></mat-spinner>\r\n        </td>\r\n      </tr>\r\n      <tr style=\"background-color:  rgb(255, 186, 59);\" mat-footer-row\r\n        *matFooterRowDef=\"displayedColumns; sticky: true\"></tr>\r\n    </table>\r\n    <mat-paginator style=\"background-color: rgb(255, 186, 59);\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { OwlOptions } from 'ngx-owl-carousel-o';\r\nimport { ProductService } from 'src/app/service/product.service';\r\nimport { ProductComponent } from '../product/product.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n  carouselInfo = [\r\n    { imageURL: \"https://goldwallpapers.com/uploads/posts/fashion-wallpaper/fashion_wallpaper_001.jpg\" },\r\n    { imageURL: \"https://www.pixelstalk.net/wp-content/uploads/2016/10/Kyrie-Irving-Wallpaper-Free-Download.jpg\" },\r\n    { imageURL: \"https://files.wallpaperpass.com/2019/10/food%20wallpaper%20188%20-%202560x1600.png\" },\r\n    { imageURL: \"https://mrgadget.com.au/wp-content/uploads/Desk-Cable-Management-Gadgets-To-Keep-You-Organised.jpg\" }\r\n  ];\r\n\r\n  categories = [{\r\n    imageURL: \"https://wallpapercave.com/wp/wp4810853.jpg\",\r\n    category: \"MOBILE\"\r\n  },\r\n  {\r\n    imageURL: \"https://www.hdwallback.net/wp-content/uploads/2015/10/jennifer-lawrence-desktop-images.jpg\",\r\n    category: \"CLOTHES\"\r\n  },\r\n  {\r\n    imageURL: \"https://all4desktop.com/data_images/original/4235841-nba-wallpaper.jpg\",\r\n    category: \"SPORTS\"\r\n  },\r\n  {\r\n    imageURL: \" https://wallpapermemory.com/uploads/339/vegetables-wallpaper-full-hd-1920x1080-114842.jpg\",\r\n    category: \"GROCERY\"\r\n  }];\r\n\r\n  customOptions: OwlOptions = {\r\n    loop: true,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    pullDrag: true,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    autoplay: false,\r\n    autoplayTimeout: 1200,\r\n    autoplayHoverPause: true,\r\n    responsive: {\r\n      0: {\r\n        items: 4\r\n      },\r\n      400: {\r\n        items: 4\r\n      },\r\n      740: {\r\n        items: 4\r\n      },\r\n      940: {\r\n        items: 4\r\n      }\r\n    },\r\n    nav: false\r\n  }\r\n\r\n  constructor(private dialog: MatDialog, public service: ProductService) {\r\n    service.searchProduct(\"\");\r\n  }\r\n\r\n  // opening a dialog box for product where all the details about product is going\r\n  // to be shown\r\n  goToProduct(item) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = false;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.width = \"75%\";\r\n    dialogConfig.backdropClass = 'backdropBackground';\r\n    dialogConfig.panelClass = 'custom-dialog-container';\r\n    dialogConfig.data = { product: item };\r\n    this.dialog.open(ProductComponent, dialogConfig);\r\n  }\r\n}\r\n\r\n\r\n","<!--home page where admin and retailer can view all products -->\r\n\r\n<div class=\"home-page\">\r\n\r\n    <div id=\"carousel\" class=\"carousel slide\" data-ride=\"carousel\">\r\n        <ul class=\"carousel-indicators mx-0\">\r\n            <li data-target=\"#carousel\" *ngFor=\"let obj of carouselInfo;let i = index\" [attr.data-slide-to]=\"i\"\r\n                ngClass=\"i == 0 ? 'active'\"></li>\r\n        </ul>\r\n        <div class=\"carousel-inner\">\r\n            <div class=\"carousel-item \" *ngFor=\"let obj of carouselInfo;let i =index\" [ngClass]=\"{'active' : i == 0}\">\r\n                <img width=\"100%\" height=\"647px\" [src]=\"obj.imageURL\" alt=\"New Slide\"\r\n                    style=\"object-fit: cover;object-position:top;\">\r\n            </div>\r\n        </div>\r\n        <a class=\"carousel-control-prev\" href=\"#carousel\" data-slide=\"prev\">\r\n            <span class=\"carousel-control-prev-icon\"></span>\r\n        </a>\r\n        <a class=\"carousel-control-next\" href=\"#carousel\" data-slide=\"next\">\r\n            <span class=\"carousel-control-next-icon\"></span>\r\n        </a>\r\n    </div>\r\n\r\n    <div class=\"categories d-flex justify-content-center align-items-center\" *ngFor=\"let obj of categories\"\r\n        style=\"background-image: linear-gradient( rgba(116, 116, 116, 0.3), rgba(116, 116, 116, 0.3)), url({{obj.imageURL}}) \">\r\n        <div class=\"category-section\" [id]=\"obj.category\">\r\n            <div class=\"display-3 mb-5 d-inline\"\r\n                style=\"color: rgb(219, 179, 0);font-weight:bold;text-shadow: 0 10px 10px black;\">{{obj.category}}</div>\r\n            <owl-carousel-o [options]=\"customOptions\">\r\n                <ng-container *ngFor=\"let item of service.products | productFilter:obj.category;let i=index\">\r\n                    <ng-template carouselSlide [id]=\"i\">\r\n                        <div class=\"card m-3 pt-2\" [ngClass]=\"{'no-items':!item.productName}\">\r\n                            <img width=\"100%\" height=\"300px\" [src]=\"item.productImage\" [alt]=\"\" [title]=\"\">\r\n                            <a role=\"button\" (click)=\"goToProduct(item)\">\r\n                                <h1 class=\"mt-1\">{{item.productName}}</h1>\r\n                            </a>\r\n                            <h1 *ngIf=\"item.productName!=null\">PRICE = {{item.productPrice}} RS</h1>\r\n                            <div *ngIf=\"item.productName!=null\" class=\"d-flex justify-content-between text-warning\">\r\n                                <a mat-icon-button [disableRipple]=\"true\">\r\n                                    <mat-icon>favorite</mat-icon>\r\n                                </a>\r\n                                <a mat-icon-button [disableRipple]=\"true\">\r\n                                    <mat-icon>add_shopping_cart</mat-icon>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                </ng-container>\r\n            </owl-carousel-o>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { CartService } from 'src/app/service/cart.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-payment-gateway',\r\n  templateUrl: './payment-gateway.component.html',\r\n  styleUrls: ['./payment-gateway.component.css']\r\n})\r\nexport class PaymentGatewayComponent {\r\n\r\n  payAmount: number;\r\n  quantity: number;\r\n\r\n  constructor(private dialogRef: MatDialogRef<PaymentGatewayComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private cartService: CartService) {\r\n    this.payAmount = data.amount;\r\n    this.quantity = data.quantity;\r\n  }\r\n\r\n  // on pay we are invoking all the neccessary fuctions for making order, \r\n  // updating our reports\r\n  onPay() {\r\n    this.cartService.createOrder();\r\n    this.cartService.updateReport();\r\n    this.cartService.clearCart();\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"payment-page mx-5\">\r\n    <div class=\"d-flex\">\r\n\r\n        <div class=\"card col-md-6 \">\r\n\r\n            <div class=\"card-header\">\r\n                <h1><strong>PAY INVOICE</strong></h1>\r\n            </div>\r\n\r\n            <div class=\"d-flex justify-content-center\">\r\n                <div class=\"p-2 bd-highlight\"><img src=\"assets/images/visa.png\" style=\"height:60px;width:6z0px\" alt=\"\">\r\n                </div>\r\n                <div class=\"p-2 bd-highlight\"><img src=\"assets/images/mastercard.png\" style=\"height:60px;width:6z0px\"\r\n                        alt=\"\"></div>\r\n                <div class=\"p-2 bd-highlight\"><img src=\"assets/images/paytm.png\" style=\"height:60px;width:6z0px\" alt=\"\">\r\n                </div>\r\n                <div class=\"p-2 bd-highlight\"><img src=\"assets/images/rupay.png\" style=\"height:60px;width:6z0px\" alt=\"\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\" text-center mt-2\">\r\n                <h1 class=\"text-success\">Pay ₹{{payAmount}}</h1>\r\n                <h3>Transaction Id : XXXXXXXXXX</h3>\r\n            </div>\r\n            <form class=\"paymentForm text-center\" [formGroup]=\"\">\r\n                <div class=\"row\">\r\n                    <span>Card Number</span>\r\n                    <input type=\"number\" placeholder=\"XXXX XXXX XXXX XXXX\" disabled>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <span>Expire Date</span>\r\n                        <input type=\"date\" placeholder=\"Date\" disabled>\r\n                    </div>\r\n\r\n                    <div class=\"col\">\r\n                        <span>CVV</span>\r\n                        <input type=\"password\" placeholder=\"123\" disabled>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <span>Card Holder</span>\r\n                    <input type=\"text\" placeholder=\"Vaibhav Bisht\" disabled>\r\n                </div>\r\n\r\n                <br><br>\r\n\r\n                <button class=\"mb-3\" (click)=\"onPay()\">CONFIRM PAYMENT</button>\r\n\r\n            </form>\r\n\r\n            <br>\r\n            <br>\r\n\r\n        </div>\r\n\r\n        <div class=\"paymentImage col-md-6\">\r\n\r\n            <img src=\"assets/images/payment.png\" alt=\"\">\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Cart } from 'src/app/model/cart.model';\r\nimport { Product } from 'src/app/model/product.model';\r\nimport { CartService } from 'src/app/service/cart.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.css']\r\n})\r\nexport class ProductComponent {\r\n\r\n  product: Product;\r\n  specificationArray = [];\r\n  minValue: number = 1;\r\n  maxValue: number = 10;\r\n  quantity: number = 1;\r\n\r\n  constructor(private dialogRef: MatDialogRef<ProductComponent>, @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public cartService: CartService, private user: UserService) {\r\n    this.product = data.product;\r\n    this.specificationArray = this.product['productSpecification'].split(',');\r\n    this.maxValue = this.product.productQuantity;\r\n  }\r\n\r\n  plus() {\r\n    if (this.quantity != this.maxValue) {\r\n      this.quantity += 1;\r\n    }\r\n  }\r\n\r\n  minus() {\r\n    if (this.quantity != this.minValue) {\r\n      this.quantity -= 1;\r\n    }\r\n  }\r\n\r\n  addToCart() {\r\n    this.dialogRef.close();\r\n    const cartItem = new Cart(1, this.user.sharedId, this.product.productId,\r\n      this.product.productPrice * this.quantity, this.quantity);\r\n    this.cartService.addToCart(cartItem);\r\n  }\r\n}\r\n","<div class=\"product-page row p-5 \">\r\n\r\n    <div class=\"product-image  col-md-6 text-center align-self-center \">\r\n        <img width=\"400px\" height=\"500px\" [src]=\"product.productImage\">\r\n    </div>\r\n\r\n    <div class=\" ml-4 product-details col-md-5 align-self-center\">\r\n\r\n        <h1 style=\"font-family: 'Aclonica', sans-serif;font-size:50px;\">{{product['productName']}}</h1>\r\n        <p style=\"font-size: 20px;color: rgb(243, 189, 11);\" class=\"font-weight-bold mb-5\">\r\n            #{{product['productManufacturer']}}\r\n            #{{product['productCategory']}} #{{product['productColor']}}</p>\r\n        <h3 class=\"font-weight-bold\">SPECIFICATIONS:</h3>\r\n        <div class=\"ml-2\" *ngFor=\"let spec of specificationArray\">\r\n            <p>- {{spec}}</p>\r\n        </div>\r\n        <p><b>Quantity: </b> Hurry Up!! Only {{product['productQuantity']}} items are <span\r\n                style=\"color: red;\">LEFT.</span>\r\n        </p>\r\n        <h2 style=\"color: rgb(243, 189, 11);\">{{product['productPrice']}} ₹</h2>\r\n        <p>Qty:</p>\r\n        <div style=\"margin-top: -15px;margin-left: -37px;\">\r\n            <button mat-icon-button [disableRipple]=\"true\" (click)=\"minus()\">\r\n                <mat-icon>remove_circle</mat-icon>\r\n            </button>\r\n            <input class=\"w-25\" type=\"text\" [value]=\"quantity\" disabled>\r\n            <button mat-icon-button [disableRipple]=\"true\" (click)=\"plus()\">\r\n                <mat-icon>add_circle</mat-icon>\r\n            </button>\r\n        </div>\r\n        <button class=\"mt-5 create-button\" mat-raised-button (click)=\"addToCart()\" routerLink=\"cart\">ADD TO\r\n            CART</button>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Address, AddressService } from 'src/app/service/address.service';\r\n\r\n@Component({\r\n  selector: 'app-address-creation',\r\n  templateUrl: './address-creation.component.html',\r\n  styleUrls: ['./address-creation.component.css']\r\n})\r\nexport class AddressCreationComponent implements OnInit {\r\n\r\n  message:string;\r\n  constructor(private ser:AddressService,private router:Router) { }\r\n  ngOnInit(): void {\r\n  }\r\n  onSubmit(Addrcreation:Address):any{\r\n    console.log(Addrcreation);\r\n    if(confirm(\"Are you sure you want to enter these address details?\")){\r\n     this.ser.Addrcreation(Addrcreation).subscribe(data => {\r\n      this.message=data});\r\n}\r\n}\r\n}","<head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\r\n</head>\r\n<div class=\"container\">\r\n\r\n        <h3>Enter Adress</h3>\r\n\r\n    <form #addressForm=\"ngForm\" (ngSubmit)='onSubmit(addressForm.value)'>\r\n\r\n        <div class=\"form-group\">\r\n\r\n            <label>Address_ID: </label>\r\n\r\n            <input required minlength=\"1\" type=\"number\" #addr_idRef='ngModel' name=\"addr_id\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='addr_idRef.errors && addr_idRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!addr_idRef.errors.required'> Provide Address Id </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group\">\r\n\r\n            <label>Name: </label>\r\n\r\n            <input required minlength=\"3\" type=\"text\" #retailer_nameRef='ngModel' name=\"retailer_name\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='retailer_nameRef.errors && retailer_nameRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!retailer_nameRef.errors.required'> Provide Name </div>\r\n\r\n                <div *ngIf='retailer_nameRef.errors.pattern'>Name should be minimum of 3 characters length</div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        \r\n       \r\n     \r\n        <div class=\"form-group\">\r\n\r\n            <label>Building NO: </label>\r\n\r\n            <input required  type=\"number\" #building_noRef='ngModel' name=\"building_no\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='building_noRef.errors && building_noRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!building_noRef.errors.required'> Provide Building Number </div>\r\n\r\n                <div *ngIf='building_noRef.errors.pattern'> It should contain proper building number</div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n\r\n            <label>City: </label>\r\n\r\n            <input required minlength=\"3\" type=\"text\" #cityRef='ngModel' name=\"city\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='cityRef.errors && cityRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!cityRef.errors.required'> Provide City </div>\r\n\r\n                <div *ngIf='cityRef.errors.pattern'>Name should be minimum of 3 characters length</div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n\r\n            <label>State: </label>\r\n\r\n            <input required minlength=\"3\" type=\"text\" #stateRef='ngModel' name=\"state\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='stateRef.errors && stateRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!stateRef.errors.required'> Provide State </div>\r\n\r\n                <div *ngIf='stateRef.errors.pattern'>Name should be minimum of 3 characters length</div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n\r\n            <label>Zipcode: </label>\r\n\r\n            <input required  type=\"number\" #zipRef='ngModel' name=\"zip\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='zipRef.errors && zipRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!zipRef.errors.required'> Provide zipcode </div>\r\n\r\n                <div *ngIf='zipRef.errors.pattern'> It should contain minimum 6 numbers</div>\r\n\r\n            </div>\r\n        </div>     \r\n        \r\n        <input [disabled]=\"addressForm.invalid\" type=\"submit\"   value=\"Enter\" class=\"btn btn-primary\">\r\n\r\n    </form>\r\n\r\n</div>\r\n\r\n <div align=\"center\">\r\n    <h2>{{message}}</h2>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-operations',\r\n  templateUrl: './customer-operations.component.html',\r\n  styleUrls: ['./customer-operations.component.css']\r\n})\r\nexport class CustomerOperationsComponent {\r\n  msg:any;\r\n  \r\n  constructor(private myservice: UserService,private router: Router) { \r\n\r\n    this.msg=this.myservice.sharedId;\r\n  }\r\n}","\r\n<div style=\"position: absolute; z-index:5;width:100%\">\r\n\r\n    <div class=\"text-center bg-primary mb-5\"> \r\n      <h1>User Management system</h1>\r\n    </div>\r\n  \r\n   <div class=\"d-flex justify-content-center\">\r\n         \r\n      <button class=\"btn btn-success\" routerLink='app-addresscreation'>Enter Address</button>&nbsp;\r\n      <button class=\"btn btn-success\" routerLink='app-deleteaddr'>Delete Address</button>&nbsp;\r\n      <button class=\"btn btn-success\" routerLink='app-updateaddr'>Update Address</button>&nbsp;\r\n      <h3>UserID:{{msg}}</h3>\r\n       </div>  \r\n  \r\n  \r\n  \r\n     <router-outlet></router-outlet>\r\n  </div>\r\n    ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Address, AddressService } from 'src/app/service/address.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-address',\r\n  templateUrl: './delete-address.component.html',\r\n  styleUrls: ['./delete-address.component.css']\r\n})\r\nexport class DeleteAddressComponent implements OnInit {\r\n\r\n  message:string;\r\n  constructor(private ser:AddressService,private router:Router) { }\r\n  ngOnInit(): any {\r\n  }\r\n  onSubmit(deleteaddr:Address)\r\n  {\r\n    if(confirm(\"Are you sure you want to delete?\")){\r\n    this.ser.deleteaddr(deleteaddr.addr_id).subscribe(data => {\r\n      this.message = data\r\n    });\r\n  }\r\n}\r\n}\r\n","<head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\r\n</head>\r\n<div class=\"container\">\r\n\r\n    <h3>Delete Adress</h3>\r\n\r\n<form #addressForm=\"ngForm\" (ngSubmit)='onSubmit(addressForm.value)'>\r\n\r\n    <div class=\"form-group\">\r\n\r\n        <label>Address_ID: </label>\r\n\r\n        <input required minlength=\"1\" type=\"number\" #addr_idRef='ngModel' name=\"addr_id\" ngModel class=\"form-control\">\r\n\r\n        <div *ngIf='addr_idRef.errors && addr_idRef.touched' class=\"alert alert-danger\">\r\n\r\n            <div [hidden]='!addr_idRef.errors.required'> Provide Address Id </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    \r\n    <input [disabled]=\"addressForm.invalid\" type=\"submit\"   value=\"Delete\" class=\"btn btn-primary\">\r\n\r\n\r\n</form>\r\n\r\n\r\n<div align=\"center\">\r\n<h2>{{message}}</h2>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Address, AddressService } from 'src/app/service/address.service';\r\n\r\n@Component({\r\n  selector: 'app-update-address',\r\n  templateUrl: './update-address.component.html',\r\n  styleUrls: ['./update-address.component.css']\r\n})\r\nexport class UpdateAddressComponent implements OnInit {\r\n  obj1: any;\r\n  customer: Address[];\r\n  message:string;\r\n  constructor(private ser:AddressService,private router:Router) { \r\n  this.obj1 = this.ser.updateMethod();\r\n  }\r\n  ngOnInit(): any {\r\n  }\r\n  onUpdate(updateaddr:Address): any {\r\n    if(confirm(\"Are you sure you want to update address?\")){\r\n    return this.ser.updateaddr(updateaddr).subscribe(data => {\r\n      this.message = data\r\n    });\r\n  }}}\r\n","<head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\r\n</head>\r\n<div class=\"container\">\r\n\r\n        <h3>Update Adress</h3>\r\n\r\n    <form #addressForm=\"ngForm\" (ngSubmit)=' onUpdate(addressForm.value)'>\r\n\r\n        <div class=\"form-group\">\r\n\r\n            <label>Address_ID: </label>\r\n\r\n            <input required minlength=\"1\" type=\"number\" #addr_idRef='ngModel' name=\"addr_id\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='addr_idRef.errors && addr_idRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!addr_idRef.errors.required'> Provide Address Id </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group\">\r\n\r\n            <label>Name: </label>\r\n\r\n            <input required minlength=\"3\" type=\"text\" #retailer_nameRef='ngModel' name=\"retailer_name\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='retailer_nameRef.errors && retailer_nameRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!retailer_nameRef.errors.required'> Provide Name </div>\r\n\r\n                <div *ngIf='retailer_nameRef.errors.pattern'>Name should be minimum of 3 characters length</div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        \r\n       \r\n     \r\n        <div class=\"form-group\">\r\n\r\n            <label>Building NO: </label>\r\n\r\n            <input required  type=\"number\" #building_noRef='ngModel' name=\"building_no\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='building_noRef.errors && building_noRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!building_noRef.errors.required'> Provide Building Number </div>\r\n\r\n                <div *ngIf='building_noRef.errors.pattern'> It should contain proper building number</div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n\r\n            <label>City: </label>\r\n\r\n            <input required minlength=\"3\" type=\"text\" #cityRef='ngModel' name=\"city\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='cityRef.errors && cityRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!cityRef.errors.required'> Provide City </div>\r\n\r\n                <div *ngIf='cityRef.errors.pattern'>Name should be minimum of 3 characters length</div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n\r\n            <label>State: </label>\r\n\r\n            <input required minlength=\"3\" type=\"text\" #stateRef='ngModel' name=\"state\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='stateRef.errors && stateRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!stateRef.errors.required'> Provide City </div>\r\n\r\n                <div *ngIf='stateRef.errors.pattern'>Name should be minimum of 3 characters length</div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"form-group\">\r\n\r\n            <label>Zipcode: </label>\r\n\r\n            <input required minlength=\"3\"  type=\"number\" #zipRef='ngModel' name=\"zip\" ngModel class=\"form-control\">\r\n\r\n            <div *ngIf='zipRef.errors && zipRef.touched' class=\"alert alert-danger\">\r\n\r\n                <div [hidden]='!zipRef.errors.required'> Provide zipcode </div>\r\n\r\n                <div *ngIf='zipRef.errors.pattern'> It should contain minimum 6 numbers</div>\r\n\r\n            </div>\r\n        </div>     \r\n        \r\n        <input [disabled]=\"addressForm.invalid\" type=\"submit\"   value=\"Enter\" class=\"btn btn-primary\">\r\n\r\n    </form>\r\n\r\n</div>\r\n\r\n <div align=\"center\">\r\n    <h2>{{message}}</h2>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CartService } from 'src/app/service/cart.service';\r\nimport { Userdata, UserService } from 'src/app/service/user.service';\r\nimport { AddressService } from '../../../service/address.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  buttonText = 'username';\r\n  user: any;\r\n  constructor(private ser: UserService, private router: Router,\r\n    private cartService: CartService, private addressService: AddressService) { }\r\n\r\n  msg: string = \"Enter Correct UserName and Password\";\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  hideloginpage() {\r\n\r\n    document.getElementById(\"loginpage\").hidden = true\r\n\r\n  }\r\n  onSubmit(u: Userdata) {\r\n\r\n    this.ser.login(u).subscribe(\r\n      user => {\r\n        this.user = user;\r\n        this.ser.sharedId = this.user.userid;\r\n        if (this.user.usertype == \"admin\") {\r\n          this.ser.userRole = 'admin';\r\n          this.router.navigate(['/home']);\r\n        }\r\n        else if (this.user.usertype == \"customer\") {\r\n          this.ser.userRole = 'customer';\r\n          this.router.navigate(['home']);\r\n          this.cartService.onLoad();\r\n          this.addressService.getAddress(user.username).subscribe(\r\n            (address) => {\r\n              this.addressService.addressId = address.addr_id;\r\n              console.log(this.addressService.addressId);\r\n            }\r\n          )\r\n\r\n        }\r\n        else if (this.user.usertype == \"invalid\") {\r\n          alert(\"Enter correct credentials\");\r\n        }\r\n\r\n      }\r\n    );\r\n  }\r\n}\r\n","<body align=\"center\" style=\"position: absolute; z-index:5;left:35%;\">\r\n    <h3 align=\"center\">Log In</h3>\r\n    <div align=\"center\">\r\n        <form #userForm=\"ngForm\" (ngSubmit)='onSubmit(userForm.value)'>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Username </label>\r\n                <input required type=\"text\" #usernameRef='ngModel' name=\"username\" ngModel class=\"form-control\">\r\n                <div *ngIf='usernameRef.errors\r\n                       && usernameRef.touched' class=\"alert alert-danger\">\r\n                    <div [hidden]='!usernameRef.errors.required'>\r\n                        Provide User Name\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n\r\n                <label>Password </label>\r\n\r\n                <input required minlength=\"4\" type=\"password\" #userpasswordRef='ngModel' name=\"userpassword\" ngModel\r\n                    class=\"form-control\">\r\n\r\n                <div *ngIf='userpasswordRef.errors && userpasswordRef.touched' class=\"alert alert-danger\">\r\n\r\n                    <div [hidden]='!userpasswordRef.errors.required'>Enter password</div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <input [disabled]=\"userForm.invalid\" type=\"submit\" value=\"Login\" class=\"btn btn-success\">\r\n        </form>\r\n    </div>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { Router} from '@angular/router';\r\nimport { Userdata, UserService } from 'src/app/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  message:string;\r\n  constructor(private ser:UserService,private router:Router) { }\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  hideloginpage(){\r\n\r\n    document.getElementById(\"loginpage\").hidden=true\r\n  \r\n  }\r\n  onSubmit(adduser:Userdata):any{\r\n    console.log(adduser+\"from here\");\r\n     this.ser.addUser(adduser).subscribe(data => {\r\n      this.message=data});\r\n  \r\n   \r\n  }\r\n\r\n}\r\n","<head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\r\n</head>\r\n<div style=\"position: absolute; z-index:5;width: 100%;\">\r\n\r\n    <div class=\"container\">\r\n\r\n        <h3>SignUp</h3>\r\n\r\n        <form #userForm=\"ngForm\" (ngSubmit)='onSubmit(userForm.value)'>\r\n\r\n            <div class=\"form-group\">\r\n\r\n                <label>UserId: </label>\r\n\r\n                <input required minlength=\"1\" type=\"number\" #useridRef='ngModel' name=\"userid\" ngModel\r\n                    class=\"form-control\">\r\n\r\n                <div *ngIf='useridRef.errors && useridRef.touched' class=\"alert alert-danger\">\r\n\r\n                    <div [hidden]='!useridRef.errors.required'> Provide User Id </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group\">\r\n\r\n                <label>UserName: </label>\r\n\r\n                <input required minlength=\"6\" type=\"text\" #usernameRef='ngModel' name=\"username\" ngModel\r\n                    class=\"form-control\">\r\n\r\n                <div *ngIf='usernameRef.errors\r\n                        && usernameRef.touched' class=\"alert alert-danger\">\r\n\r\n                    <div [hidden]='!usernameRef.errors.required'>\r\n\r\n                        Provide User Name\r\n\r\n                    </div>\r\n\r\n                    <div *ngIf='usernameRef.errors.pattern'>Name should be minimum of 6 characters length</div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group\">\r\n\r\n                <label>UserPassword: </label>\r\n\r\n                <input required minlength=\"6\" type=\"password\" #userpasswordRef='ngModel' name=\"userpassword\" ngModel\r\n                    class=\"form-control\">\r\n\r\n                <div *ngIf='userpasswordRef.errors\r\n                        && userpasswordRef.touched' class=\"alert alert-danger\">\r\n\r\n                    <div [hidden]='!userpasswordRef.errors.required'>\r\n\r\n                        Provide User Password\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n\r\n                <label>UserType:(customer) </label>\r\n\r\n                <input required minlength=\"6\" type=\"text\" #usertypeRef='ngModel' name=\"usertype\" ngModel\r\n                    class=\"form-control\">\r\n\r\n                <div *ngIf='usertypeRef.errors\r\n                        && usertypeRef.touched' class=\"alert alert-danger\">\r\n\r\n                    <div [hidden]='!usertypeRef.errors.required'>\r\n\r\n                        Provide User Type\r\n\r\n                    </div>\r\n\r\n                    <div *ngIf='usertypeRef.errors.pattern'>Name should be minimum of 6 characters length</div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"form-group\">\r\n\r\n                <label>User PhoneNumber: </label>\r\n\r\n                <input required type=\"number\" pattern=\"^((\\\\+91-?)|0)?[0-9]{10}$\" #userphoneRef='ngModel'\r\n                    name=\"userphone\" ngModel class=\"form-control\">\r\n\r\n                <div *ngIf='userphoneRef.errors && userphoneRef.touched' class=\"alert alert-danger\">\r\n\r\n                    <div [hidden]='!userphoneRef.errors.required'> Provide User Phone Number </div>\r\n\r\n                    <div *ngIf='userphoneRef.errors.pattern'>Phone number should consists of 10 digits</div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n\r\n                <label>User EmailID: </label>\r\n\r\n                <input required minlength=\"6\" type=\"text\" #useremailRef='ngModel' name=\"useremail\" ngModel\r\n                    class=\"form-control\">\r\n\r\n                <div *ngIf='useremailRef.errors\r\n                        && useremailRef.touched' class=\"alert alert-danger\">\r\n\r\n                    <div [hidden]='!useremailRef.errors.required'>\r\n\r\n                        Provide User MailID\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <input [disabled]=\"userForm.invalid\" type=\"submit\" value=\"SignUp\" class=\"btn btn-primary\">\r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n    <div align=\"center\">\r\n        <h2>{{message}}</h2>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css']\r\n})\r\nexport class UserManagementComponent{\r\n\r\n  constructor(public service:UserService) {\r\n   }\r\n\r\n}\r\n","<div>\r\n  <div class=\"container-fluid bg-primary\">\r\n    <a class=\"navbar-brand\" href=\"#\"></a>\r\n    <div class=\"float-center\">\r\n      <h1>User Management system</h1>\r\n    </div>\r\n  </div>\r\n  &nbsp; &nbsp;&nbsp; &nbsp;\r\n\r\n  <router-outlet></router-outlet>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HandleErrorService {\r\n\r\n\r\n  public handleError(errorResponse: HttpErrorResponse) {\r\n\r\n    console.error('Generated Error', errorResponse);\r\n    return throwError(errorResponse.error.message);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n\r\n\r\nconst MaterialComponents = [MatListModule, MatButtonModule, MatIconModule,\r\n  MatToolbarModule, MatMenuModule, MatSidenavModule, MatCardModule,\r\n  MatFormFieldModule, MatInputModule, MatTableModule, MatPaginatorModule,\r\n  MatSortModule, MatSnackBarModule, MatNativeDateModule, MatDatepickerModule,\r\n  MatGridListModule, MatDialogModule, MatSelectModule,MatSnackBarModule,\r\n  MatProgressSpinnerModule,MatTooltipModule];\r\n\r\n@NgModule({\r\n  imports: [MaterialComponents], exports: [MaterialComponents]\r\n})\r\nexport class MaterialModule { }\r\n","// model for cart\r\nexport class Cart {\r\n\r\n    constructor(public cartId: number, public userId: string, public productId: string,\r\n        public cartItemPrice: number, public quantity: number) {\r\n\r\n        this.cartId = cartId;\r\n        this.userId = userId;\r\n        this.productId = productId;\r\n        this.cartItemPrice = cartItemPrice;\r\n        this.quantity = quantity;\r\n\r\n    }\r\n}","// model for order\r\nexport class Order {\r\n\r\n    constructor(public id: number, public orderId: string, public userId: string,\r\n        public products: String, public totalPrice: number, public totalQuantity: number,\r\n        public addressId: string, public dispatchDate: string, public arrivalDate: string) {\r\n\r\n        this.id = id;\r\n        this.orderId = orderId;\r\n        this.userId = userId;\r\n        this.products = products;\r\n        this.totalPrice = totalPrice;\r\n        this.totalQuantity = totalQuantity;\r\n        this.addressId = addressId;\r\n        this.dispatchDate = dispatchDate;\r\n        this.arrivalDate = arrivalDate;\r\n    }\r\n}","// model for product\r\nexport class Product {\r\n\r\n    constructor(public productId: string, public productName: string, public productPrice: number,\r\n        public productColor: string, public productCategory: string,\r\n        public productQuantity: number, public productManufacturer: string,\r\n        public productSpecification: string, public productImage: string) {\r\n\r\n        this.productId = productId;\r\n        this.productName = productName;\r\n        this.productPrice = productPrice;\r\n        this.productColor = productColor;\r\n        this.productCategory = productCategory;\r\n        this.productQuantity = productQuantity;\r\n        this.productManufacturer = productManufacturer;\r\n        this.productSpecification = productSpecification;\r\n        this.productImage = productImage;\r\n    }\r\n}","// model for sales report\r\nexport class SalesReport {\r\n\r\n    constructor(public salesReportId: number, public productId: string,\r\n        public productName: string, public quantitySold: number, public totalSale: number) {\r\n\r\n        this.salesReportId = salesReportId;\r\n        this.productId = productId;\r\n        this.productName = productName;\r\n        this.quantitySold = quantitySold;\r\n        this.totalSale = totalSale;\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Product } from '../model/product.model';\r\n\r\n@Pipe({\r\n  name: 'productFilter',\r\n  pure: false\r\n})\r\n\r\n// pipe to filter product array on the basis of category \r\nexport class ProductFilterPipe implements PipeTransform {\r\n\r\n  transform(products: Product[], category: string): Product[] {\r\n    if (!products || !category) {\r\n      return products;\r\n    }\r\n    var tempList: Product[] = products.filter(product =>\r\n      product.productCategory.toLowerCase().indexOf(category.toLowerCase()) !== -1);\r\n\r\n    if (tempList.length) {\r\n      return tempList;\r\n    } else {\r\n      tempList = [new Product(\"1\", null, null, null, null, null, null, null, \"https://www.aquafresh-ro.in/images/pnf.jpg\")];\r\n      return tempList;\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n  \r\n  addressId:number=null;\r\n\r\n  constructor(private ser:HttpClient) {}\r\n  \r\n  public Addrcreation(Addrcreation:Address) {\r\n    console.log(\"ins service add\");\r\n    console.log(Addrcreation);\r\n    const headers =new HttpHeaders().set('Content_Type', 'text/plain ;charset=utf-8');\r\n    return this.ser.post(\"http://localhost:8000/addr/Addrcreation\", Addrcreation, { headers, responseType: 'text'});\r\n  }\r\n\r\n\r\n  getAddress(userName:string){\r\n    // const headers =new HttpHeaders().set('Content_Type', 'text/plain ;charset=utf-8');\r\n    return this.ser.get<Address>(`http://localhost:8000/addr/getAddress/${userName}`);\r\n  }\r\n\r\ndeleteaddr(addr_id: number) {\r\n  console.log(\"ins service delete\");\r\n  const headers =new HttpHeaders().set('Content_Type', 'text/plain ;charset=utf-8');\r\n  return this.ser.delete(\"http://localhost:8000/addr/Deleteaddr/\" + addr_id,  { headers, responseType: 'text'});\r\n}\r\n\r\npublic updateMethod() {\r\n  return this.updateaddr;\r\n}\r\nupdateaddr(updateAddr :Address) {\r\n  console.log(\"ins service update\");\r\n  const headers =new HttpHeaders().set('Content_Type', 'text/plain ;charset=utf-8');\r\n  return this.ser.put(`http://localhost:8000/addr/Updateaddr/${updateAddr.addr_id}`, updateAddr, { headers, responseType: 'text'});\r\n}\r\n\r\n}\r\nexport class Address{\r\n  addr_id:number;\r\n  retailer_name:string;\r\n  building_no:number;\r\n  city:string;\r\n  state:string;\r\n  zip:number;\r\n}","import { AfterViewChecked, AfterViewInit, Injectable, OnInit } from '@angular/core';\r\nimport { Cart } from '../model/cart.model';\r\nimport { SalesReport } from '../model/sales-report.model';\r\nimport { CartCommunicationService } from '../communication/cart-communication.service';\r\nimport { OrderService } from './order.service';\r\nimport { ProductService } from './product.service';\r\nimport { SalesReportService } from './sales-report.service';\r\nimport { NotificationService } from './notification.service';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CartService {\r\n\r\n  cartItems: Array<Cart> = [];\r\n  subTotal: number;\r\n  totalQuantity: number;\r\n\r\n  constructor(public productService: ProductService, private cartCommunication: CartCommunicationService\r\n    , private orderService: OrderService, public salesReportService: SalesReportService,\r\n    private notification: NotificationService, private userService: UserService) {\r\n\r\n    this.onLoad();\r\n  }\r\n\r\n  onLoad() {\r\n\r\n    this.cartCommunication.getCartByUserId(this.userService.sharedId).subscribe(\r\n      (cartItems) => {\r\n        this.cartItems = cartItems;\r\n        this.subTotal = this.findSubTotal();\r\n        this.totalQuantity = this.findTotalQuantity();\r\n        console.log(cartItems);\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(error, 'X', 'error');\r\n      });\r\n  }\r\n\r\n  // adding items to the cart\r\n  addToCart(cartItem: Cart) {\r\n    this.cartCommunication.addItemToCart(cartItem).subscribe(\r\n      (response) => {\r\n        this.notification.showNotification('Cart Item Added Successfully !', '✓', 'success');\r\n        this.cartItems.unshift(cartItem);\r\n        this.subTotal = this.findSubTotal();\r\n        this.totalQuantity = this.findTotalQuantity();\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(\"Only Valid Users Can ADD\", 'X', 'error');\r\n      });\r\n  }\r\n\r\n  // deleting items from cart\r\n  deleteItem(item) {\r\n\r\n    this.onLoad();\r\n    const index = this.cartItems.indexOf(item);\r\n    this.cartCommunication.deleteCartItem(this.cartItems[index].cartId).subscribe(\r\n      (response) => {\r\n        this.notification.showNotification(\r\n          `Cart Item with Id:${this.cartItems[index].cartId} Deleted Successfully !!`, '✓', 'success');\r\n        this.totalQuantity -= this.cartItems[index].quantity;\r\n        this.subTotal -= this.cartItems[index].cartItemPrice;\r\n        this.cartItems.splice(index, 1);\r\n      });\r\n  }\r\n\r\n  // finding total price of all the cart items\r\n  findSubTotal() {\r\n    return this.cartItems.map(a => a.cartItemPrice).reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  // finding total quantity of items present in cart\r\n  findTotalQuantity() {\r\n    return this.cartItems.map(a => a.quantity).reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  findProduct(productId: string) {\r\n    return this.productService.products.find(p => p.productId == productId);\r\n  }\r\n\r\n  // on making purchase clearing all the items from cart\r\n  clearCart() {\r\n    this.cartCommunication.deleteCartlist(this.userService.sharedId).subscribe(\r\n      (response) => {\r\n        this.notification.showNotification('Cart Is Empty Now !!', '✓', 'success');\r\n        this.cartItems = [];\r\n        this.subTotal = 0;\r\n        this.totalQuantity = 0;\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(error, 'X', 'error');\r\n      });\r\n  }\r\n\r\n  createOrder() {\r\n\r\n    const products = this.cartItems.map(e => this.findProduct(e.productId).productName)\r\n      .reduce((a, b) => a + ',' + b);\r\n    this.orderService.addOrder(this.userService.sharedId, products, this.subTotal,\r\n      this.totalQuantity);\r\n  }\r\n\r\n  updateReport() {\r\n\r\n    for (let item of this.cartItems) {\r\n      var tempProduct = this.findProduct(item.productId);\r\n      var salesReport = new SalesReport(1, item.productId,\r\n        tempProduct.productName, item.quantity, item.cartItemPrice);\r\n      this.salesReportService.updateSalesReport(salesReport);\r\n      this.productService.updateProductQuantity(tempProduct.productQuantity - item.quantity,\r\n        tempProduct.productId);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { GrowthReport } from '../model/growth-report.model';\r\nimport { GrowthReportCommunicationService } from '../communication/growth-report-communication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GrowthReportService {\r\n\r\n  growthReport: Array<GrowthReport> = [];\r\n  subject = new Subject<any>();\r\n  errorMessage: string;\r\n\r\n  constructor(private growthReportCommunication: GrowthReportCommunicationService) {\r\n\r\n    this.addGrowthReport();\r\n    growthReportCommunication.getAllGrowthReports().subscribe(\r\n      (growthReport) => {\r\n        this.growthReport = growthReport;\r\n        this.subject.next(growthReport);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  addGrowthReport() {\r\n\r\n    this.growthReportCommunication.addGrowthReport().subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// notification service for showing error and success messages\r\nexport class NotificationService {\r\n\r\n  constructor(public snackBar: MatSnackBar) { }\r\n\r\n  showNotification(displayMessage: string, buttonText: string, messageType: 'error' | 'success') {\r\n    this.snackBar.open(displayMessage, buttonText, {\r\n      duration: 5000,\r\n      horizontalPosition: 'right',\r\n      verticalPosition: 'bottom',\r\n      panelClass: [messageType, 'notification']\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { OrderCommunicationService } from '../communication/order-communication.service';\r\nimport { Order } from '../model/order.model';\r\nimport { AddressService } from './address.service';\r\nimport { NotificationService } from './notification.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  subject = new Subject<any>();\r\n  orders: Array<Order> = [];\r\n  arr = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R',\r\n    'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n\r\n  constructor(private orderCommunication: OrderCommunicationService,\r\n    private notification: NotificationService, private addressService: AddressService) {\r\n\r\n    orderCommunication.getAllOrders().subscribe(\r\n      (orders) => {\r\n        this.orders = orders;\r\n        this.subject.next(orders);\r\n      });\r\n  }\r\n\r\n// updating Schedule for departure and arrival time of order\r\n  updateSchedule(index: number, dispatchDate: string, arrivalDate: string) {\r\n\r\n    this.orders[index].dispatchDate = dispatchDate;\r\n    this.orders[index].arrivalDate = arrivalDate;\r\n    this.orderCommunication.updateOrderSchedule(this.orders[index]).subscribe(\r\n      (response) => {\r\n        this.notification.showNotification('Order Schedule Updated Successfully !!', '✓', 'success');\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(error, 'X', 'error');\r\n      });\r\n    this.subject.next(this.orders);\r\n  }\r\n\r\n  deleteOrder(index: number) {\r\n\r\n    this.orderCommunication.removeOrderById(this.orders[index].orderId).subscribe(\r\n      (response) => {\r\n        this.notification.showNotification\r\n          (`Order With Id:${this.orders[index].orderId} Deleted Successfully !!`, '✓', 'success');\r\n        this.orders.splice(index, 1);\r\n        this.subject.next(this.orders);\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(error, 'X', 'error');\r\n      });\r\n  }\r\n\r\n  addOrder(userId: string, products: string, totalPrice: number, totalQuantity: number) {\r\n\r\n    var date1 = new Date();\r\n    var date2 = new Date();\r\n    date2.setDate(date2.getDate() + 3);\r\n    var orderId = this.randomStr(15);\r\n    const order = new Order(1, orderId, userId, products, totalPrice, totalQuantity, this.addressService.addressId.toString(),\r\n      date1.toISOString().substring(0, 10), date2.toISOString().substring(0, 10));\r\n    this.orderCommunication.addOrder(order).subscribe(\r\n      (response) => {\r\n        this.notification.showNotification('Order Has Been Made !!', '✓', 'success');\r\n        this.orders.push(order);\r\n        this.subject.next(this.orders);\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(error, 'X', 'error');\r\n      });\r\n  }\r\n\r\n  // generating random order id \r\n  randomStr(len) {\r\n    var ans = '';\r\n    for (var i = len; i > 0; i--) {\r\n      ans +=\r\n        this.arr[Math.floor(Math.random() * this.arr.length)];\r\n    }\r\n    return ans;\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { Product } from '../model/product.model';\r\nimport { ProductCommunicationService } from '../communication/product-communication.service';\r\nimport { NotificationService } from './notification.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  subject = new Subject<any>();\r\n  tempIndex: number = -1;\r\n  products: Array<Product> = [];\r\n\r\n  constructor(public fb: FormBuilder, private productCommunication: ProductCommunicationService\r\n    , private notification: NotificationService) {\r\n\r\n    productCommunication.getProducts().subscribe(\r\n      (products) => {\r\n        this.products = products;\r\n        this.subject.next(products);\r\n      });\r\n  }\r\n\r\n  formGroup: FormGroup = this.fb.group({\r\n    productId: ['', Validators.required],\r\n    productName: ['', Validators.required],\r\n    productImage: ['', Validators.required],\r\n    productPrice: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n    productColor: ['', Validators.required],\r\n    productCategory: ['', Validators.required],\r\n    productQuantity: ['', [Validators.required,Validators.maxLength(3)]],\r\n    productManufacturer: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z ]*$\")]],\r\n    productSpecification: ['', Validators.required],\r\n  });\r\n\r\n  initializeFormGroup(item: any) {\r\n\r\n    if (item != null) {\r\n      this.tempIndex = this.products.indexOf(item);\r\n      this.formGroup.setValue({\r\n        productId: item.productId,\r\n        productName: item.productName,\r\n        productImage: item.productImage,\r\n        productPrice: item.productPrice,\r\n        productColor: item.productColor,\r\n        productCategory: item.productCategory,\r\n        productQuantity: item.productQuantity,\r\n        productManufacturer: item.productManufacturer,\r\n        productSpecification: item.productSpecification\r\n      });\r\n    } else {\r\n      this.formGroup.reset();\r\n      this.tempIndex = -1;\r\n    }\r\n  }\r\n\r\n  saveProduct() {\r\n\r\n    if (this.tempIndex != -1) {\r\n      this.productCommunication.updateProduct(this.formGroup.value).subscribe(\r\n        (response) => {\r\n          this.notification.showNotification('Successfully Updated !!', '✓', 'success');\r\n          this.products[this.tempIndex] = this.formGroup.value;\r\n          this.subject.next(this.products);\r\n        },\r\n        (error) => {\r\n          this.notification.showNotification(error, 'X', 'error');\r\n        });\r\n    } else {\r\n      this.productCommunication.addProduct(this.formGroup.value).subscribe(\r\n        (response) => {\r\n          this.notification.showNotification('Successfully Added !!', '✓', 'success');\r\n          this.products.push(this.formGroup.value);\r\n          this.subject.next(this.products);\r\n        },\r\n        (error) => {\r\n          this.notification.showNotification(error, 'X', 'error');\r\n        });\r\n    }\r\n  }\r\n\r\n  updateProductQuantity(quantity: number, productId: string) {\r\n    this.productCommunication.updateProductQuantity(quantity, productId).subscribe(\r\n      (response) => {\r\n        this.notification.showNotification('Product Quantity Updated Successfully !!', '✓', 'success');\r\n        var index = this.products.map(p => p.productId).indexOf(productId);\r\n        this.products[index].productQuantity = quantity;\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(error, 'X', 'error');\r\n      });\r\n  }\r\n\r\n  deleteProduct(item: any) {\r\n    const index = this.products.indexOf(item);\r\n    this.productCommunication.deleteProduct(item.productId).subscribe(\r\n      (response) => {\r\n        this.notification.showNotification(\r\n          `Product with Id:${item.productId} Deleted Successfully !!`, '✓', 'success');\r\n        this.products.splice(index, 1);\r\n        this.subject.next(this.products);\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(error, 'X', 'error');\r\n      });\r\n  }\r\n\r\n  searchProduct(keyword: string) {\r\n\r\n    if (keyword != \"\") {\r\n      console.log(keyword);\r\n      this.productCommunication.productSearch(keyword).subscribe(\r\n        (products) => {\r\n          this.products = products;\r\n          this.subject.next(products);\r\n        });\r\n    } else {\r\n      console.log(keyword);\r\n      this.productCommunication.getProducts().subscribe(\r\n        (products) => {\r\n          this.products = products;\r\n          this.subject.next(products);\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { SalesReport } from '../model/sales-report.model';\r\nimport { SalesReportCommunicationService } from '../communication/sales-report-communication.service';\r\nimport { NotificationService } from './notification.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SalesReportService {\r\n\r\n  salesReport: Array<SalesReport> = [];\r\n  subject = new Subject<any>();\r\n\r\n  constructor(private salesReportCommunication: SalesReportCommunicationService,\r\n    private notification: NotificationService) {\r\n\r\n    salesReportCommunication.getAllSalesReport().subscribe(\r\n      (salesReport) => {\r\n        this.salesReport = salesReport;\r\n        this.subject.next(salesReport)\r\n      });\r\n  }\r\n\r\n  updateSalesReport(salesReport: SalesReport) {\r\n\r\n    var index = this.salesReport.map(e => e.productId).indexOf(salesReport.productId);\r\n    this.salesReportCommunication.updateSalesReport(salesReport).subscribe(\r\n      (response) => {\r\n        this.notification.showNotification('Sales Report Updated !!', '✓', 'success');\r\n        if (index !== -1) {\r\n          this.salesReport[index].quantitySold += salesReport.quantitySold;\r\n          this.salesReport[index].totalSale += salesReport.totalSale;\r\n        } else {\r\n          this.salesReport.push(salesReport);\r\n        }\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(error, 'X', 'error');\r\n      });\r\n  }\r\n\r\n  // finding total revenue made from the product sales\r\n  getTotalRevenue() {\r\n    return this.salesReport.map(s => s.totalSale).reduce((a, b) => a + b, 0);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  userRole:string=null;\r\n  sharedId:string=null;\r\n  \r\n  constructor(private ser:HttpClient) { }\r\n  \r\n  public addUser(adduser: Userdata) {\r\n    console.log(\"ins service add\");\r\n    console.log(adduser);\r\n    const headers =new HttpHeaders().set('Content_Type', 'text/plain ;charset=utf-8');\r\n    return this.ser.post(\"http://localhost:8000/admin/addUser\", adduser,  { headers, responseType: 'text'});\r\n  }\r\n\r\n  public Productmasterlist():Observable<Array<Userdata>> {\r\n    console.log(\"ins service add\");\r\n    const headers =new HttpHeaders().set('Content_Type', 'text/plain ;charset=utf-8');\r\n    return this.ser.get<Array<Userdata>>(\"http://localhost:8000/admin/Productmasterlist\");\r\n  }\r\n\r\n\r\n  login(u:Userdata):Observable<any>{\r\n    const headers =new HttpHeaders().set('Content_Type', 'text/plain ;charset=utf-8');\r\n    return this.ser.put(\"http://localhost:8000/admin/loginUser\", u);\r\n  }\r\n\r\n\r\n\r\n}\r\nexport class Userdata{\r\n  userid:number;\r\n  username:string;\r\n  usertype:string;\r\n  userpassword:string;\r\n  userphone:number;\r\n  useremail:string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}